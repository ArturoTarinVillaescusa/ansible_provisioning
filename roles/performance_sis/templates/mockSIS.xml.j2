<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7072dc4c-0286-4956-9d8c-6e2517596f28" activeEnvironment="Default" name="mockSIS" resourceRoot="" soapui-version="5.4.0" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="a8b4522d-0f78-4db0-a639-560ae5b043e7" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:9002" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://localhost:9002</con:endpoint></con:endpoints><con:resource name="" path="" id="8a279f3e-fd47-4d1a-a607-3863a00b609c"><con:settings/><con:parameters/><con:method name="1" id="70ea597b-6f3b-4e07-b36f-32cfc9efd5e8" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:esq="http://sarsis.rentalcar.es/SARSISD/Esquemas">esq:GetAllGroupsReservationAvailabilityAndRatesByLocationRS</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:element xmlns:esq="http://sarsis.rentalcar.es/SARSISD/Esquemas">esq:GetAllGroupsReservationAvailabilityAndRatesByLocationRQ</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="0e0e0412-bd11-478e-a13c-a12d55ce2ce5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:9001</con:endpoint><con:request><![CDATA[<?xml version="1.0"?>
<GetAllGroupsReservationAvailabilityAndRatesByLocationRQ xmlns="http://sarsis.rentalcar.es/SARSISD/Esquemas" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://sarsis.rentalcar.es/SARSISD/Esquemas  http://sarsis.rentalcar.es/SARSISD/Esquemas/Rentalcar_GetAllGroupsReservationAvailabilityAndRatesByLocation.xsd">
    <Authentication>
        <Code>02500-00</Code>
        <Password>Pri#18disp</Password>
        <Encrypted>false</Encrypted>
    </Authentication>
    <ReservationData>
        <PickUp>
            <Place>ALC</Place>
            <Date>2019-06-01</Date>
            <Time>10:00</Time>
        </PickUp>
        <DropOff>
            <Place>ALC</Place>
            <Date>2019-06-01</Date>
            <Time>10:00</Time>
        </DropOff>
    </ReservationData>
</GetAllGroupsReservationAvailabilityAndRatesByLocationRQ>]]></con:request><con:originalUri>http://localhost/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:restMockService id="5f6e3e49-e94c-4aad-a1c6-e23ecd3036b4" port="9002" path="/" host="SARTESTSRV02" name="SIS" docroot=""><con:settings/><con:properties/><con:restMockAction name="/" method="POST" resourcePath="/" id="e3e991d0-af83-4aae-bad6-87327bb9027d"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="GetAllGroupsReservationAvailabilityAndRatesByLocationRS" id="ba55cadd-83e0-4586-a8d7-057564c30d81" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<GetAllGroupsReservationAvailabilityAndRatesByLocationRS xsi:schemaLocation="http://sarsis.rentalcar.es/SARSISD/Esquemas http://sarsis.rentalcar.es/SARSISD/Esquemas/Rentalcar_GetAllGroupsReservationAvailabilityAndRatesByLocation.xsd" xmlns="http://sarsis.rentalcar.es/SARSISD/Esquemas" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <UMID>U1E60000000025635683</UMID>
   <CarGroupAvailabilityAndRate>
      <CarGroup>AA</CarGroup>
      <Availability>Available</Availability>
      <RentalNetRate>
         <RentalNetRatePrice>80.85</RentalNetRatePrice>
         <VATPercentage>0.21</VATPercentage>
      </RentalNetRate>
   </CarGroupAvailabilityAndRate>
   <CarGroupAvailabilityAndRate>
      <CarGroup>BB</CarGroup>
      <Availability>Available</Availability>
      <RentalNetRate>
         <RentalNetRatePrice>83.6</RentalNetRatePrice>
         <VATPercentage>0.21</VATPercentage>
      </RentalNetRate>
   </CarGroupAvailabilityAndRate>
   <CarGroupAvailabilityAndRate>
      <CarGroup>CC</CarGroup>
      <Availability>Available</Availability>
      <RentalNetRate>
         <RentalNetRatePrice>86.35</RentalNetRatePrice>
         <VATPercentage>0.21</VATPercentage>
      </RentalNetRate>
   </CarGroupAvailabilityAndRate>
   <CarGroupAvailabilityAndRate>
      <CarGroup>D</CarGroup>
      <Availability>Available</Availability>
      <RentalNetRate>
         <RentalNetRatePrice>96.25</RentalNetRatePrice>
         <VATPercentage>0.21</VATPercentage>
      </RentalNetRate>
   </CarGroupAvailabilityAndRate>
   <CarGroupAvailabilityAndRate>
      <CarGroup>F</CarGroup>
      <Availability>Available</Availability>
      <RentalNetRate>
         <RentalNetRatePrice>101.75</RentalNetRatePrice>
         <VATPercentage>0.21</VATPercentage>
      </RentalNetRate>
   </CarGroupAvailabilityAndRate>
   <CarGroupAvailabilityAndRate>
      <CarGroup>L</CarGroup>
      <Availability>Available</Availability>
      <RentalNetRate>
         <RentalNetRatePrice>107.25</RentalNetRatePrice>
         <VATPercentage>0.21</VATPercentage>
      </RentalNetRate>
   </CarGroupAvailabilityAndRate>
   <CarGroupAvailabilityAndRate>
      <CarGroup>R</CarGroup>
      <Availability>Available</Availability>
      <RentalNetRate>
         <RentalNetRatePrice>91.85</RentalNetRatePrice>
         <VATPercentage>0.21</VATPercentage>
      </RentalNetRate>
   </CarGroupAvailabilityAndRate>
   <CarGroupAvailabilityAndRate>
      <CarGroup>S</CarGroup>
      <Availability>Available</Availability>
      <RentalNetRate>
         <RentalNetRatePrice>94.6</RentalNetRatePrice>
         <VATPercentage>0.21</VATPercentage>
      </RentalNetRate>
   </CarGroupAvailabilityAndRate>
   <CarGroupAvailabilityAndRate>
      <CarGroup>T</CarGroup>
      <Availability>Available</Availability>
      <RentalNetRate>
         <RentalNetRatePrice>107.25</RentalNetRatePrice>
         <VATPercentage>0.21</VATPercentage>
      </RentalNetRate>
   </CarGroupAvailabilityAndRate>
</GetAllGroupsReservationAvailabilityAndRatesByLocationRS>]]></con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/></con:soapui-project>