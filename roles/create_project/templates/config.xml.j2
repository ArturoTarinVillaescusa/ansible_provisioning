<?xml version='1.0' encoding='UTF-8'?>
{% if build_builders_maven | bool %}
<maven2-moduleset plugin="maven-plugin@3.0">
{% else %}
<project>
{% endif %}
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>

  <!-- Properties -->
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>15</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
        <parameterDefinitions>
            <hudson.model.StringParameterDefinition>
                <name>REPOSITORIO</name>
                <description/>
                <defaultValue>{{ repo_name | replace(' ', '') }}_repo</defaultValue>
            </hudson.model.StringParameterDefinition>
            <hudson.model.StringParameterDefinition>
                <name>RAMA</name>
                <description/>
                <defaultValue>{{ item }}</defaultValue>
            </hudson.model.StringParameterDefinition>
        </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.9.0">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
{% if item == "develop" %}
    <com.joelj.jenkins.eztemplates.TemplateProperty plugin="ez-templates@1.3.2"/>
{% else %}
    <com.joelj.jenkins.eztemplates.TemplateImplementationProperty plugin="ez-templates@1.3.2">
      <templateJobName>{{ build_name }}-build-develop</templateJobName>
      <syncMatrixAxis>true</syncMatrixAxis>
      <syncDescription>false</syncDescription>
      <syncBuildTriggers>true</syncBuildTriggers>
      <syncDisabled>false</syncDisabled>
      <syncSecurity>true</syncSecurity>
      <syncScm>false</syncScm>
      <syncOwnership>true</syncOwnership>
      <syncAssignedLabel>true</syncAssignedLabel>
      <exclusions>
        <string>ez-templates</string>
        <string>job-params</string>
        <string>disabled</string>
        <string>description</string>
        <string>scm</string>
      </exclusions>
    </com.joelj.jenkins.eztemplates.TemplateImplementationProperty>
{% endif %}
  </properties>

  <!-- Repository Information -->
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.7.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>{{ repo_url_git }}</url>
        <credentialsId>e3857e1a-0dab-450d-96e7-cc46ea72049d</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
      {% if item == "develop" %}
        <name>*/{{ item }}</name>
      {% else %}
        <name>*/{{ item }}/*</name>
      {% endif %}
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <browser class="hudson.plugins.git.browser.Stash">
      <url>{{ repo_url_browser }}</url>
    </browser>
    <submoduleCfg class="list"/>
    <extensions>
        <hudson.plugins.git.extensions.impl.CleanBeforeCheckout/>
    </extensions>
  </scm>

  <!-- Jenkins Agents -->
  {% set build_agents = [] %}
  {% if build_builders_maven | bool %}
{% set build_agents = build_agents + ['java'] + [ 'java_x64' ] %}
{% endif %}
{% if build_builders_gradle | bool %}
{% set build_agents = build_agents + ['java'] + [ 'java_x64' ] %}
{% endif %}

{% if build_builders_maven | bool %}
<rootModule>
    <groupId>{{ build_builders_maven_groupId | default('com.rentalcar') }}</groupId>
    <artifactId>{{ build_builders_maven_artifactId | default('test') }}</artifactId>
  </rootModule>
  <goals>{{ build_builders_maven_goals }}</goals>
  <aggregatorStyleBuild>true</aggregatorStyleBuild>
  <incrementalBuild>false</incrementalBuild>
  <ignoreUpstremChanges>false</ignoreUpstremChanges>
  <ignoreUnsuccessfulUpstreams>false</ignoreUnsuccessfulUpstreams>
  <archivingDisabled>false</archivingDisabled>
  <siteArchivingDisabled>false</siteArchivingDisabled>
  <fingerprintingDisabled>false</fingerprintingDisabled>
  <resolveDependencies>false</resolveDependencies>
  <processPlugins>false</processPlugins>
  <mavenValidationLevel>-1</mavenValidationLevel>
  <runHeadless>false</runHeadless>
  <disableTriggerDownstreamProjects>false</disableTriggerDownstreamProjects>
  <blockTriggerWhenBuilding>true</blockTriggerWhenBuilding>
  <settings class="jenkins.mvn.DefaultSettingsProvider"/>
  <globalSettings class="jenkins.mvn.DefaultGlobalSettingsProvider"/>
  <reporters/>

  <runPostStepsIfResult>
    <name>FAILURE</name>
    <ordinal>2</ordinal>
    <color>RED</color>
    <completeBuild>true</completeBuild>
  </runPostStepsIfResult>
{% endif %}

{% if build_builders_delphi | bool %}
{% set build_agents = build_agents + [ 'delphi10' ] %}
{% endif %}
  <assignedNode>{{ build_agents|join('&amp;&amp;') }}</assignedNode>

  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>

  <!-- JDK -->
  <jdk>(System)</jdk>

  <!-- Triggers -->
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>H/10 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>

  <concurrentBuild>false</concurrentBuild>

  <!-- Builders -->
  <builders>
{% if build_builders_batchfile | bool %}
    <hudson.tasks.BatchFile>
        <command>{{ build_builders_batchfile_command }}</command>
    </hudson.tasks.BatchFile>
{% endif %}
{% if build_builders_gradle | bool %}
    <hudson.plugins.gradle.Gradle plugin="{{ build_builders_gradle_plugin }}">
        <switches/>
        <tasks>{{ build_builders_gradle_tasks }}</tasks>
        <rootBuildScriptDir/>
        <buildFile/>
        <gradleName>Gradle_3_3</gradleName>
        <useWrapper>true</useWrapper>
        <makeExecutable>true</makeExecutable>
        <useWorkspaceAsHome>true</useWorkspaceAsHome>
        <wrapperLocation/>
        <passAllAsSystemProperties>true</passAllAsSystemProperties>
        <projectProperties/>
        <passAllAsProjectProperties>false</passAllAsProjectProperties>
    </hudson.plugins.gradle.Gradle>
{% endif %}
{% if build_builders_sonar | bool %}
    <hudson.plugins.sonar.SonarRunnerBuilder plugin="sonar@2.6.1">
        <project/>
        <properties>sonar.java.binaries=build/libs</properties>
        <javaOpts/>
        <additionalArguments/>
        <jdk>(Inherit From Job)</jdk>
        <sonarScannerName>Sonar_2_9</sonarScannerName>
        <task/>
    </hudson.plugins.sonar.SonarRunnerBuilder>
{% endif %}
  </builders>

  <publishers>
{% if build_publishers_jacoco | bool %}
    <hudson.plugins.jacoco.JacocoPublisher plugin="jacoco@2.2.1">
        <execPattern>**/**.exec</execPattern>
        <classPattern>**/build/classes</classPattern>
        <sourcePattern>**/src/main/java</sourcePattern>
        <inclusionPattern/>
        <exclusionPattern>**/test</exclusionPattern>
        <skipCopyOfSrcFiles>false</skipCopyOfSrcFiles>
        <minimumInstructionCoverage>0</minimumInstructionCoverage>
        <minimumBranchCoverage>0</minimumBranchCoverage>
        <minimumComplexityCoverage>0</minimumComplexityCoverage>
        <minimumLineCoverage>0</minimumLineCoverage>
        <minimumMethodCoverage>0</minimumMethodCoverage>
        <minimumClassCoverage>0</minimumClassCoverage>
        <maximumInstructionCoverage>0</maximumInstructionCoverage>
        <maximumBranchCoverage>0</maximumBranchCoverage>
        <maximumComplexityCoverage>0</maximumComplexityCoverage>
        <maximumLineCoverage>0</maximumLineCoverage>
        <maximumMethodCoverage>0</maximumMethodCoverage>
        <maximumClassCoverage>0</maximumClassCoverage>
        <changeBuildStatus>false</changeBuildStatus>
        <deltaInstructionCoverage>0</deltaInstructionCoverage>
        <deltaBranchCoverage>0</deltaBranchCoverage>
        <deltaComplexityCoverage>0</deltaComplexityCoverage>
        <deltaLineCoverage>0</deltaLineCoverage>
        <deltaMethodCoverage>0</deltaMethodCoverage>
        <deltaClassCoverage>0</deltaClassCoverage>
        <buildOverBuild>false</buildOverBuild>
    </hudson.plugins.jacoco.JacocoPublisher>
{% endif %}
{% if build_publishers_archiver | bool %}
    <hudson.tasks.ArtifactArchiver>
        <artifacts>{{ build_publishers_archiver_artifact_path }}</artifacts>
        <allowEmptyArchive>false</allowEmptyArchive>
        <onlyIfSuccessful>false</onlyIfSuccessful>
        <fingerprint>false</fingerprint>
        <defaultExcludes>true</defaultExcludes>
        <caseSensitive>true</caseSensitive>
     </hudson.tasks.ArtifactArchiver>
{% endif %}
{% if build_publishers_junit | bool %}
     <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.23">
        <testResults>{{ build_publishers_junit_results_path }}</testResults>
        <keepLongStdio>false</keepLongStdio>
        <healthScaleFactor>1.0</healthScaleFactor>
        <allowEmptyResults>true</allowEmptyResults>
     </hudson.tasks.junit.JUnitResultArchiver>
{% endif %}
  </publishers>

  <!-- Build Wrappers -->
{% if build_builders_sonar | bool %}
  <buildWrappers>
    <hudson.plugins.sonar.SonarBuildWrapper plugin="sonar@2.6.1"/>
  </buildWrappers>
{% endif %}

{% if build_builders_maven | bool %}
</maven2-moduleset>
{% else %}
</project>
{% endif %}